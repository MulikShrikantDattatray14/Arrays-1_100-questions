Given a matrix of integers A of size N x M and an integer B.
In the given matrix every row and column is sorted in non-decreasing order. Find and return the position of B in the matrix in the given form:
If A[i][j] = B then return (i * 1009 + j)
If B is not present return -1.
//////////////////////////////////////////////////////////////////////////////

//If A[i][j] = B then return (i * 1009 + j)
//If B is not present return -1.

A = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
];
B = 2;

let n = A.length;
let m = A[0].length;
let i = 0;
let j = m - 1;
let ans = Number.MAX_SAFE_INTEGER;

while (i < n && j >= 0) {
    if (A[i][j] == B) {
        //If there are multiple B in A then return the smallest value of i*1009 +j such that A[i][j]=B.
        ans = Math.min(ans, (i + 1) * 1009 + (j + 1));
    }
    if (A[i][j] >= B) j--; //move towards 0th index- for decreasing values
    else i++; // downwards for increasing the value
}
if (ans == Number.MAX_SAFE_INTEGER) return -1;
console.log(ans);
