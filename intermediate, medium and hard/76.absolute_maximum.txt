Problem Description
Given 4 array of integers A, B, C and D of same size, find and return the maximum value of | A [ i ] - A [ j ] | + | B [ i ] - B [ j ] | + | C [ i ] - C [ j ] | + | D [ i ] - D [ j ] | + | i - j| where i != j and |x| denotes the absolute value of x.



Problem Constraints
2 <= length of the array A, B, C, D <= 100000
-106 <= A[i] <= 106



Input Format
The arguments given are the integer arrays A, B, C, D.



Output Format
Return the maximum value of | A [ i ] - A [ j ] | + | B [ i ] - B [ j ] | + | C [ i ] - C [ j ] | + | D [ i ] - D [ j ] | + | i - j|



Example Input
Input 1:

 A = [1, 2, 3, 4]
 B = [-1, 4, 5, 6]
 C = [-10, 5, 3, -8]
 D = [-1, -9, -6, -10]
Input 2:

 A = [1, 2]
 B = [3, 6]
 C = [10, 11]
 D = [1, 6]


Example Output
Output 1:

 30
Output 2:

 11


Example Explanation
Explanation 1:

 Maximum value occurs for i = 0 and j = 1.
Explanation 2:

There is only one possibility for i, j as there are only two elements in the array.

================================================================================================================================================================================================================================
solution approach:-

| a - b| = { a-b if (a>=b)
             b-a  if (b>a)
           }
We can expand the absolute in two ways: a - b or b - a as shown above.

For e.g. a = 5, b = 7. b > a so absolute expansion should be b - a. If we use a - b then it’s value 5 - 7 = -2 which is less than 2 (7 - 5).

So, if we expand the		operator the wrong way, it can’t attain maximum value.
Similarly, the given expression can be expanded in 32 different ways(2 ways for each absolute), and if any of the expansion is expanded wrong, we can’t achieve maximum value.

Some of the ways are:
-> A[i] - A[j] + B[i] - B[j] + C[i] - C[j] + D[i] - d[j] + i - j.
-> -A[i] + A[j] + B[i] - B[j] + C[i] - C[j] + D[i] - d[j] + i - j.
-> A[i] - A[j] - B[i] + B[j] + C[i] - C[j] + D[i] - d[j] + i - j.

So try to expand the given expression in all possible 32 ways and calculate the maximum among these values.

Time Complexity (32 * N) where N is the number of elements in all the arrays.

================================================================================================================================================================================================================================

//return the maximum value of | A [ i ] - A [ j ] | + | B [ i ] - B [ j ] | + | C [ i ] - C [ j ] | + | D [ i ] - D [ j ] | + | i - j| where i != j and |x| denotes the absolute value of x.
A = [1, 2, 3, 4];
B = [-1, 4, 5, 6];
C = [-10, 5, 3, -8];
D = [-1, -9, -6, -10];
let n = A.length;
let res = 0;
//2^5=32 possiblility for 5 variables
// Expand the given expression in 32 different ways and gives 16 unique expressions
// (A[i]+B[i]+C[i]+D[i]+i)-(A[j]+B[j]+c[j]+D[j]+j)=A-B,so lets try to maximise the A and minimise the B.
for (let i = 0; i < 32; i++) {
    let maxi = -100000000000,
        mini = 100000000000;
    let cur;
    for (let j = 0; j < n; j++) {
        cur = 0;
        let temp;
        for (let k = 0; k < 5; ++k) {
            if (k == 0) {
                temp = A[j];
            } else if (k == 1) {
                temp = B[j];
            } else if (k == 2) {
                temp = C[j];
            } else if (k == 3) {
                temp = D[j];
            } else {
                temp = j;
            }
            if ((i >> k) & 1) {
                // check if kth bit is 1 i.e positive
                cur += temp;
            } else {
                cur -= temp;
            }

        }
        maxi = Math.max(maxi, cur);
        mini = Math.min(mini, cur);
    }
    res = Math.max(res, maxi - mini);
}
console.log(res);//30