Problem Description
Given a vector A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Problem Constraints
1 <= |A| <= 100000



Input Format
First and only argument is the vector A



Output Format
Return one integer, the answer to the question



Example Input
Input 1:

A = [0, 1, 0, 2]
Input 2:

A = [1, 2]


Example Output
Output 1:

1
Output 2:

0


Example Explanation
Explanation 1:

1 unit is trapped on top of the 3rd element.
Explanation 2:

No water is trapped.

=================================================================================================

approach-1 ( ussing the prefix sum )

A = [0, 1, 0, 2]
let ans = trap(A)
console.log(ans)
function trap(A) {
    //https://www.youtube.com/watch?v=UZG3-vZlFM4
    let n = A.length;
    let pf = new Array(n).fill(0);
    let sf = new Array(n).fill(0);
    for (let i = 1; i < n; i++) {
        // max of the prefix element or the incoming element
        pf[i] = Math.max(pf[i - 1], A[i - 1]);
    }
    for (let i = n - 2; i >= 0; i--) {
        // max of the suffix element or the incoming element
        sf[i] = Math.max(sf[i + 1], A[i + 1]);
    }
    console.log(pf)
    console.log(sf)
    let sum = 0;
    let temp = 0;
    for (let i = 0; i < n; i++) {
        temp = Math.min(pf[i], sf[i]) - A[i];
        if (temp > 0) sum += temp;
    }
    return sum;
}
