Problem Description:-

You're given a read-only array of N integers. Find out if any integer occurs more than N/3 times in the array in linear time and constant additional space.
If so, return the integer. If not, return -1.

If there are multiple solutions, return any one.

Note: Read-only array means that the input array should not be modified in the process of solving the problem



Problem Constraints:-

1 <= N <= 7*105
1 <= A[i] <= 109


Input Format
The only argument is an integer array A.


Output Format
Return an integer.


Example Input
Input 1:
[1 2 3 1 1]
Input 2:
[1 2 3]


Example Output
Output 1:
1
Output 2:
-1


Example Explanation
Explanation 1:
1 occurs 3 times which is more than 5/3 times.
Explanation 2:
No element occurs more than 3 / 3 = 1 times in the array.

 =================================================================================================
CODE-1 :-

let nums = [2, 2]
let ans = solve(nums);
console.log(ans)
function solve(A) {

    //  refer take U forward channel - majority-II

    // when told to do N/2 ---> there will 1 majority element
    //when told to do N/3 ---> there will be 2 majority element ..
    // and so on ...
    //note: extension of the Q4 of the assignment
    let n = A.length;
    let candidate1 = -1;
    let candidate2 = -1;
    let count1 = 0;
    let count2 = 0;
    for (let i = 0; i < A.length; i++) {
        if (A[i] == candidate1) count1++;
        else if (A[i] == candidate2) count2++;
        else if (count1 == 0) {
            candidate1 = A[i];
            count1 = 1;
        } else if (count2 == 0) {
            candidate2 = A[i];
            count2 = 1;
        }

        else {
            count1--;
            count2--;
        }

    }
    //console.log(num1, num2);

    let finalcount1 = 0;
    let finalcount2 = 0;
    for (let i = 0; i < A.length; i++) {
        if (candidate1 == A[i]) {
            finalcount1++;
            if (finalcount1 > n / 3) {
                return candidate1;
            }
        }

        if (candidate2 == A[i]) {
            finalcount2++;
            if (finalcount2 > n / 3) {
                return candidate2;
            }
        }
    }
    return -1;
    //console.log(num1, num2);



}

================================================================================================================================================================================================================================
CODE-2(leetcode question)


let nums = [3, 2, 3]
let A = nums
let ans = solve(A)
console.log(ans)


function solve(A) {
    //  refer take U forward channel - majority-II)

    // when told to do N/2 ---> there will 1 majority element
    //when told to do N/3 ---> there will be 2 majority element ..
    // and so on ...
    //note: extension of the Q4 of the assignment
    let n = A.length;
    let candidate1 = -1;
    let candidate2 = -1;
    let count1 = 0;
    let count2 = 0;
    for (let i = 0; i < A.length; i++) {
        if (A[i] == candidate1) count1++;
        else if (A[i] == candidate2) count2++;
        else if (count1 == 0) {
            candidate1 = A[i];
            count1 = 1;
        } else if (count2 == 0) {
            candidate2 = A[i];
            count2 = 1;
        }

        else {
            count1--;
            count2--;
        }

    }
    //console.log(num1, num2);
    let ans = []
    let finalcount1 = 0;
    let finalcount2 = 0;
    for (let i = 0; i < A.length; i++) {
        if (candidate1 == A[i]) {
            finalcount1++;
            if (finalcount1 > n / 3) {
                ans.push(candidate1);
            }
        }

        if (candidate2 == A[i]) {
            finalcount2++;
            if (finalcount2 > n / 3) {
                ans.push(candidate2);
            }
        }
    }
    let set = new Set(ans)
    return (Array.from(set))


}

===============================================================================================================
