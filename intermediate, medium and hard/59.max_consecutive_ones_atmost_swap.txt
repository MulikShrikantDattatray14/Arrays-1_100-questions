Given a binary string A. It is allowed to do at most one swap between any 0 and 1. Find and return the length of the longest consecutive 1’s that can be achieved.


Input Format

The only argument given is string A.
Output Format

Return the length of the longest consecutive 1’s that can be achieved.
Constraints

1 <= length of string <= 1000000
A contains only characters 0 and 1.
For Example

Input 1:
    A = "111000"
Output 1:
    3

Input 2:
    A = "111011101"
Output 2:
    7


================================================================================================================================================================================================================================



let arr = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];
// Expected output: 6, as the longest sequence of 1s is [1, 1, 1, 1]

let n = arr.length;
let count = 0;
//check if in the given array every element is 1, if yes , then return their count
for (let i = 0; i < n; i++) {
    if (arr[i] == 1) count++;
}
if (count == n) return count;

let ans = 0;

for (let i = 0; i < n; i++) {
    if (arr[i] == 0) {
        let left = 0;
        let right = 0;

        for (let j = i - 1; j >= 0; j--) {
            if (arr[j] == 1) {
                left++;
            } else break;
        }

        for (let j = i + 1; j < n; j++) {
            if (arr[j] == 1) {
                right++;
            } else break;
        }
        let c = 0;
        // left and right ==count and thus this is maximum
        if (left + right == count) {
            c = left + right;
        } else {
            c = left + right + 1;
        }

        if (c > ans) {
            ans = c;
        }
    }
}
console.log(ans);