Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

let intervals=[[1,3],[2,6],[8,10],[15,18]];
console.log(merge1(intervals))
    function merge1(intervals) {
  const n = intervals.length;
  intervals.sort((a, b) => a[0] - b[0]);
  const ans = [];

  let start = 0;
  while (start < n) {
    let i = start;
    let j = start + 1;
    let mergedEnd = intervals[start][1];

    while (j < n && mergedEnd >= intervals[j][0]) {
      mergedEnd = Math.max(mergedEnd, intervals[j][1]);
      i++;
      j++;
    }

    ans.push([intervals[start][0], mergedEnd]);
    start = j;
  }

  return ans;
}
